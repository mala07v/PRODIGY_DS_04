
# Import necessary libraries
import pandas as pd
import re
import string
import matplotlib.pyplot as plt
import seaborn as sns
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from wordcloud import WordCloud

# Load the dataset
df = pd.read_csv('/content/Tweets.csv')

# Display the first few rows of the dataset
print(df.head())

# Display summary statistics of the dataset
print(df.info())

# Function to preprocess the text
def preprocess_text(text):
    # Convert text to lowercase
    text = text.lower()
    # Remove URLs
    text = re.sub(r'http\S+|www\S+|https\S+', '', text, flags=re.MULTILINE)
    # Remove punctuation
    text = text.translate(str.maketrans('', '', string.punctuation))
    # Remove stop words
    stop_words = set(stopwords.words('english'))
    tokens = word_tokenize(text)
    filtered_text = [word for word in tokens if word not in stop_words]
    return ' '.join(filtered_text)

# Apply the preprocessing function to the text column
df['cleaned_text'] = df['text'].apply(preprocess_text)

# Display the first few rows of the cleaned data
print(df[['text', 'cleaned_text']].head())

# Analyze the distribution of sentiments
sentiment_counts = df['airline_sentiment'].value_counts()
print(sentiment_counts)

# Analyze sentiment trends over time
df['tweet_created'] = pd.to_datetime(df['tweet_created'])
sentiment_trends = df.groupby([df['tweet_created'].dt.date, 'airline_sentiment']).size().unstack().fillna(0)
print(sentiment_trends)

# Set up the visualizations
plt.figure(figsize=(10, 6))

# Distribution of Sentiments
plt.subplot(2, 1, 1)
sns.countplot(x='airline_sentiment', data=df, palette='viridis')
plt.title('Distribution of Sentiments')
plt.xlabel('Sentiment')
plt.ylabel('Count')

# Sentiment Trends Over Time
plt.subplot(2, 1, 2)
sentiment_trends.plot(kind='line', figsize=(15, 6))
plt.title('Sentiment Trends Over Time')
plt.xlabel('Date')
plt.ylabel('Number of Tweets')

plt.tight_layout()
plt.show()

# Generate word clouds for positive and negative sentiments
positive_tweets = ' '.join(df[df['airline_sentiment'] == 'positive']['cleaned_text'])
negative_tweets = ' '.join(df[df['airline_sentiment'] == 'negative']['cleaned_text'])

wordcloud_positive = WordCloud(width=800, height=400, background_color='white').generate(positive_tweets)
wordcloud_negative = WordCloud(width=800, height=400, background_color='black').generate(negative_tweets)

# Plot the word clouds
plt.figure(figsize=(15, 8))

plt.subplot(1, 2, 1)
plt.imshow(wordcloud_positive, interpolation='bilinear')
plt.title('Word Cloud for Positive Sentiments')
plt.axis('off')

plt.subplot(1, 2, 2)
plt.imshow(wordcloud_negative, interpolation='bilinear')
plt.title('Word Cloud for Negative Sentiments')
plt.axis('off')

plt.tight_layout()
plt.show()
